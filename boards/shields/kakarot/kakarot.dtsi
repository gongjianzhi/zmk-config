#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/pointing.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <input/processors.dtsi>

#include "kakarot-layouts.dtsi"


&physical_layout0 {
    transform = <&default_transform>; // Label of the matrix transform this layout uses
};

&adc {
	status = "okay";
};

/ {
    chosen {
        zephyr,display = &oled;
        zmk,kscan = &kscan0;
        zmk,physical-layout = &physical_layout0;
    };

    default_transform: keymap_transform0 {
        compatible = "zmk,matrix-transform";
        columns = <14>;
        rows = <5>;
        map = <
        RC(0,0)  RC(0,1)  RC(0,2)  RC(0,3)  RC(0,4)  RC(0,5)  RC(0,6)       RC(0,7)  RC(0,8)  RC(0,9)  RC(0,10)  RC(0,11)  RC(0,12)  RC(0,13)
        RC(1,0)  RC(1,1)  RC(1,2)  RC(1,3)  RC(1,4)  RC(1,5)  RC(1,6)       RC(1,7)  RC(1,8)  RC(1,9)  RC(1,10)  RC(1,11)  RC(1,12)  RC(1,13)
        RC(2,0)  RC(2,1)  RC(2,2)  RC(2,3)  RC(2,4)  RC(2,5)  RC(2,6)       RC(2,7)  RC(2,8)  RC(2,9)  RC(2,10)  RC(2,11)  RC(2,12)  RC(2,13)
        RC(3,0)  RC(3,1)  RC(3,2)  RC(3,3)  RC(3,4)  RC(3,5)  RC(3,6)       RC(3,7)  RC(3,8)  RC(3,9)  RC(3,10)  RC(3,11)  RC(3,12)  RC(3,13)
        RC(4,0)  RC(4,1)  RC(4,2)  RC(4,3)  RC(4,4)  RC(4,5)  RC(4,6)       RC(4,7)  RC(4,8)  RC(4,9)  RC(4,10)  RC(4,11)  RC(4,12)  RC(4,13)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;

        diode-direction = "col2row";
        row-gpios
            = <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    left_encoder: encoder_left {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    right_encoder: encoder_right {
        compatible = "alps,ec11";
        a-gpios = <&pro_micro 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <80>;
        status = "disabled";
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <20>;
    };

    anin0: analog_input_0 {
        compatible = "zmk,analog-input";
        sampling-hz = <120>;
        y-ch {
            io-channels = <&adc 5>; // <--- see ain-map.png for nRF52840
            mv-mid = <1625>;
            mv-min-max = <1250>;
            mv-deadzone = <10>;
            scale-multiplier = <2>;
            scale-divisor = <70>;
            invert;
            evt-type = <INPUT_EV_REL>;
            input-code = <INPUT_REL_Y>;
        };
        x-ch {
            io-channels = <&adc 7>; // <--- see ain-map.png for nRF52840
            mv-mid = <1700>;
            mv-min-max = <1250>;
            mv-deadzone = <10>;
            scale-multiplier = <2>;
            scale-divisor = <70>;
            invert;
            evt-type = <INPUT_EV_REL>;
            input-code = <INPUT_REL_X>;

            /* enable report mode for gamepad axis or knob */
            /* to only call input_report on quantquantized value is updated */
            /* NOTE: mouse input does NOT need this */
            // report-on-change-only;

        };
    }; 

    joystick_listener: joystick_listener {
        compatible = "zmk,input-listener";
        status = "disabled";
    };

    split_inputs {
        #address-cells = <1>;
        #size-cells = <0>;

        joystick_split: joystick_split@0 {
            compatible = "zmk,input-split";
            reg = <0>;
        };
    };

    joystick_listener_right: joystick_listener_right {
        compatible = "zmk,input-listener";
        status = "disabled";
        device = <&joystick_split>;
        input-processors = <&zip_xy_scaler 1 8>;
        input-processors = <&zip_xy_to_scroll_mapper>;
    };
};

&pro_micro_i2c {
    status = "okay";

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <64>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <63>;
        segment-remap;
        com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };
};